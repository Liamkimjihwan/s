<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="bitcamp.java89.ems2.dao.VideoDao">
<<<<<<< HEAD

  <resultMap type="video" id="video-map">
    <id     column="cono"        property="contentsNo"/>
    <result column="kotl"       property="koreanTitle"/>
    <result column="entl"      property="englishTitle"/>
    <result column="voimg"        property="videoImage"/>
    <result column="vodsc"        property="videoDescription"/>
    <result column="spnm"       property="speakerName"/>
    <result column="sjob"   property="speakerJob"/>
    <result column="simg"    property="speakerImage"/>
    <result column="posted"    property="posted"/>
  </resultMap>
  
<!--   <select id="count" parameterType="string" resultType="int">
    select count(*)
    from stud s 
      left outer join memb m on s.sno=m.mno
    where email=#{value}
  </select>
  
  <select id="countByNo" parameterType="int" resultType="int">
    select count(*)
    from stud s 
      left outer join memb m on s.sno=m.mno
    where s.sno=#{value}
  </select> -->
  
   <select id="countAll" resultType="int">
    select 
      count(*)
    from video v
      left outer join contents c on v.cono=c.cono
  </select>
  
  <select id="getList" resultMap="video-map" parameterType="map">
    select 
      c.cono, 
      v.kotl, 
      v.entl, 
      v.voimg, 
      v.vodsc, 
      v.spnm, 
      v.sjob, 
      v.simg,
      v.posted
    from video v
      left outer join contents c on v.cono=c.cono
    order by c.cono
<!--     limit #{startRowIndex}, #{rowSize} -->
  </select>
  
 <!--  <select id="getOne" parameterType="int" resultMap="student-map">
    select
      m.mno,
      m.name, 
      m.tel, 
      m.email, 
      s.work, 
      s.lst_schl, 
      s.schl_nm, 
      s.path
    from stud s
      left outer join memb m on s.sno=m.mno
    where m.mno=#{value}
  </select>

  <insert id="insert" parameterType="student">
    insert into stud(sno,work,lst_schl,schl_nm,path) 
    values(
      #{memberNo},
      #{working},
       
      <choose>
        <when test="working == true">'Y'</when> 
        <otherwise>'N'</otherwise>
      </choose>,
     
      #{grade}, 
      #{schoolName}, 
      #{photoPath})
  </insert>  
  
  <update id="update" parameterType="student">
    update stud set
	    work=#{working}, 
	    lst_schl=#{grade}, 
	    schl_nm=#{schoolName}, 
	    path=#{photoPath}
    where sno=#{memberNo}
  </update>
  
  <delete id="delete" parameterType="int">
  <![CDATA[
    delete from stud where sno=#{value}
  ]]>
  </delete> -->

</mapper>



=======
  <resultMap type="video" id="video-map">
    <id     column="cono"        property="contentsNo"/>
    <result column="type"        property="contentsType"/>
    <result column="kotl"       property="koreanTitle"/>
    <result column="entl"      property="englishTitle"/>
    <result column="voimg"        property="videoImage"/>
    <result column="vodsc"        property="videoDescription"/>
    <result column="spnm"       property="speakerName"/>
    <result column="sjob"   property="speakerJob"/>
    <result column="simg"    property="speakerImage"/>
    <result column="posted"    property="posted"/>
    <result column="like"    property="checked"/>
  </resultMap>
  
<!--   <select id="count" parameterType="string" resultType="int">
    select count(*)
    from stud s 
      left outer join memb m on s.sno=m.mno
    where email=#{value}
  </select>
  
  <select id="countByNo" parameterType="int" resultType="int">
    select count(*)
    from stud s 
      left outer join memb m on s.sno=m.mno
    where s.sno=#{value}
  </select> -->
  
   <select id="countAll" resultType="int">
    select 
      count(*)
    from video v
      left outer join contents c on v.cono=c.cono
  </select>
  
  <select id="getList" resultMap="video-map" parameterType="map">
	  select * from video vd
		  inner join contents ctt on vd.cono = ctt.cono
		  inner join copic cp on ctt.cono = cp.cono
		  inner join topic tp on cp.tno = tp.tno
		  inner join snatr snt on tp.tno = snt.tno 
		  inner join result ret on snt.reno = ret.reno
	  where ret.sno = #{sno}
	  limit 6;
  </select>
  
  <select id="isLike" resultType="int" parameterType="map">
	  select count(*)
	  from lklst
	  where cono = #{cono} and sno = #{sno}
  </select>
  
  <select id="detailList" resultMap="video-map" parameterType="map">
	  select DISTINCT ctt.cono,vd.kotl,vd.entl,vd.voimg,vd.vodsc,vd.spnm,vd.sjob,vd.simg,vd.posted from video vd
		  inner join contents ctt on vd.cono = ctt.cono
		  inner join copic cp on ctt.cono = cp.cono
		  inner join topic tp on cp.tno = tp.tno
		  inner join snatr snt on tp.tno = snt.tno 
		  inner join result ret on snt.reno = ret.reno
	  where ret.sno = #{sno}
	  limit #{startRowIndex}, #{rowSize}
  </select>
  
</mapper>

 <!--  <select id="getOne" parameterType="int" resultMap="student-map">
    select
      m.mno,
      m.name, 
      m.tel, 
      m.email, 
      s.work, 
      s.lst_schl, 
      s.schl_nm, 
      s.path
    from stud s
      left outer join memb m on s.sno=m.mno
    where m.mno=#{value}
  </select>

  <insert id="insert" parameterType="student">
    insert into stud(sno,work,lst_schl,schl_nm,path) 
    values(
      #{memberNo},
      #{working},
       
      <choose>
        <when test="working == true">'Y'</when> 
        <otherwise>'N'</otherwise>
      </choose>,
     
      #{grade}, 
      #{schoolName}, 
      #{photoPath})
  </insert>  
  
  <update id="update" parameterType="student">
    update stud set
	    work=#{working}, 
	    lst_schl=#{grade}, 
	    schl_nm=#{schoolName}, 
	    path=#{photoPath}
    where sno=#{memberNo}
  </update>
  
  <delete id="delete" parameterType="int">
  <![CDATA[
    delete from stud where sno=#{value}
  ]]>
  </delete> -->
>>>>>>> branch 'master' of https://github.com/Liamkimjihwan/s.git






<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1"
  metadata-complete="false">

<!-- 컴텍스트 파라미터 등록 등록 -->
<context-param>
 <param-name>contextConfigLocation</param-name>
 <param-value>/WEB-INF/conf/application-context.xml</param-value>
</context-param>

<!-- 리스너 등록 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

 <!-- 필터 등록 -->
   <filter>
     <filter-name>CharacterEncodingFilter</filter-name>
     <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
     <init-param>
     <param-name>encoding</param-name>
     <param-value>UTF-8</param-value>
     </init-param>
   </filter>
   
   <!--  필터를 어느 요청에 적용할 것인지 설정한다. -->
 <filter-mapping>
     <filter-name>CharacterEncodingFilter</filter-name>
     <url-pattern>/*</url-pattern>
   </filter-mapping>  
  <!-- 
  <servlet>
    <servlet-name>ContextLoaderServlet</servlet-name>
    <servlet-class>bitcamp.java89.ems2.servlet.ContextLoaderServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  -->
  
  <!-- 서블릿 클래스 등록 -->
  <!-- 스프링 프론트 컨트롤러 
       페이지 컨트롤러와 웹 관련 객체를 자체 보유한 스프링 IoC 컨테이너에서 관리한다.
       => *.do 요청을 받아서 페이지 컨트롤러의 메서드를 찾아서 호출한다.
       => dispatcherServlet은 자신이 보유한 IoC 컨테이너에 들어있는 객체를 사용한다.
          또한 ContextLoaderListener가 관리하는 객체도 사용할 수 있다. 공유가능
  -->
  <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/conf/dispatcher-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup> <!-- 클라이언트가 요구하기 전에 존재해야 실행이 느리지 않다. -->
    </servlet>
    
     <servlet>
        <servlet-name>json</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/conf/json-servlet.xml</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup> <!-- 클라이언트가 요구하기 전에 존재해야 실행이 느리지 않다. -->
    </servlet>

    <!-- map all requests for /app/* to the dispatcher servlet -->
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>
    
        <servlet-mapping>
        <servlet-name>json</servlet-name>
        <url-pattern>*.json</url-pattern>
    </servlet-mapping>
    
    
    <!-- URL에서 구체적으로 자원을 명시하지 않았을 때 기본으로 찾는 자원
         적히는 순서대로 파일을 찾는다. main을 먼저 찾는다. -->
    <welcome-file-list>
    <welcome-file>main.html</welcome-file>
      <welcome-file>index.html</welcome-file>
      <welcome-file>index.htm</welcome-file>
      <welcome-file>index.jsp</welcome-file>
      <welcome-file>default.html</welcome-file>
      <welcome-file>default.htm</welcome-file>
    </welcome-file-list>
</web-app>







